name: Tests

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: cross-env NODE_ENV=test ARCJET_ENV=development NODE_OPTIONS=--experimental-vm-modules DATABASE_URL=${{ secrets.DATABASE_URL }} npm test
        env:
          ARCJET_KEY: ${{ secrets.ARCJET_KEY }}

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Generate test summary
        run: |
          echo "### Test Results :white_check_mark:"
          echo "Summary of test run:"
          echo "- **Total Tests:** $(grep -o 'Tests:        [^,]*' coverage/lcov-report/index.html | head -n 1 | awk '{print $2}')"
          echo "- **Passed:** $(grep -o 'Tests:        [^,]*' coverage/lcov-report/index.html | head -n 1 | awk '{print $4}')"
          echo "- **Failed:** $(grep -o 'Tests:        [^,]*' coverage/lcov-report/index.html | head -n 1 | awk '{print $6}')"
          echo "- **Coverage:** $(grep -o 'Lines      : [^%]*' coverage/lcov-report/index.html | head -n 1 | awk '{print $3}')"
        shell: bash

      - name: Annotate test failures
        if: failure()
        run: echo "::error file=tests/app.test.js::Test failures detected. Review test results for details."
